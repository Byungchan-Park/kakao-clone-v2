다른 브랜치는 마스터 브랜치와 정확히 똑같은 소스코드를 갖고 있다.
하지만 여기서 조금씩 실험을 해볼 수 있다. 예를 들자면, 새로운 기능 추가?
그래서 마스터 브랜치는 안 건드려도 된다.
브랜치는 마치 나무의 가지처럼, 마스터는 건드리지 않고 새로운 기능이나 실험을 하고 싶을 때 생성한다.

repository는 코드를 저장하는 폴더이고 깃은 그걸 추적한다.
commit은 깃 파일(변경사항)의 보고나함이여서 무엇이 변경되었는지를 기록한다.
branch는 마스터의 복사판인데 새로운 것을 테스트해보고 싶을 때 사용한다.

깃은 코드 변경사항을 추척하는 시스템, 그리고 깃허브는 그걸 업로드하는 웹사이트.

HTML
Information 정보는 head 파트, Contents 작성할 내용은 body 파트.
ID는 여권번호처럼 고유하고, Class는 콜롬비아 국적처럼 여러개 존재할 수 있다.
class는 반복해서 여러 번 사용할 수 있다. 동일한 속성이 있을 때마다 계속!
예를 들면, 내 여권번호는 ID이지만, 내 국적인 "대한민국"은 많은 사람들이 갖고있지. 그래서 이건 class인거야.